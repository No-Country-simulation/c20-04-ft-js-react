type Msg {
    message : String
}
type idf{
    idf :String
}
type User {
    _id: String,
    username: String ,
    email: String,
    role: String,
    password: String,
    followers: [String],
    following: [String],
    collec_amount: [String],
    status: Boolean,
    createdAt: String,
    updatedAt: String,
    profile_photo: String,
    description :String,
    address: String,
    contact:String,
    posts:[Post]
    comment:[Comment]
},
type Comment{
    id_user:String,
    text:String!
    id_posts:String!
    user:User
    post:Post
}
type Post{
    _id: String,
    category: String,
    tags: [String],
    id_user: ID,
    text: String,
    url_img: String,
    status: Boolean,
    createdAt: String,
    report:  Int,
    comment: [Comment],
    user: User
}
type Query {
    getMsg : Msg
    getUser : User
    getUserName :User
    getPost : [Post]
    getMyPost : [Post]
    getMyComment : [Comment]
}
type Mutation{
    RegisterUser(registerInput:RegisterInput): User!,
    loginUser(loginInput:LoginInput):User!
    Modprofile(profileInput:ProfileInput):User!
    addDeleFolowing(followersInput:FollowersInput):User
    PostC(postInput:PostInput):Post
    PostM(postInput:PostInput):Post
    CommentC(commentInput:CommentInput):Comment
    CommentM(commentInput:CommentInput):Comment

}
input LoginInput{
    email:String!
    password:String!
}
input RegisterInput {
    username:String!,
    email:String!,
    role:String!,
    password:String!,
    name:String!
}
input ProfileInput {
    username:String,
    email:String,
    password:String,
    profile_photo: String,
    description: String,
    address: String,
    contact:String,
}
input PostInput {
    category: String,
    text: String,
    tags: [String],
    _id: String,
    id_user: ID,
    url_img: String,
    status: Boolean
}
input CommentInput {
    text:String!
    id_posts:String!
}
input FollowersInput {
    id:String
}