type Msg {
    message : String
}
type User {
    _id: String,
    username: String ,
    email: String,
    role: String,
    password: String,
    followers: [String],
    following: [String],
    collec_amount: [String],
    status: Boolean,
    createdAt: String,
    updatedAt: String,
    posts:[Post]
    comment:[Comment]
}
type Tag{
    tag :String
}
type Text{
    text:String
}
type Url{
    url:String
}
type Body{
    text:Text
    photoAndV:[Url]
} 
type Comment{
    id_user:String,
    text:String!
    id_posts:String!
    user:User
    post:Post
}
type Post{
    _id: String,
    category: String,
    tags: [Tag],
    id_user: ID,
    title: String,
    body: Body,
    status: Boolean,
    createdAt: String,
    report:  Int,
    comment: Comment,
    user: User
}
type Query {
    getMsg : Msg
    getUser : User
    getPost : [Post]
    getMyPost : [Post]
}
type Mutation{
    RegisterUser(registerInput:RegisterInput): User!,
    loginUser(loginInput:LoginInput):User!
    Modprofile(profileInput:ProfileInput):User!
    PostC(postInput:PostInput):Post
    PostM(postInput:PostInput):Post
    CommentC(commentInput:CommentInput):Comment
}
input LoginInput{
    email:String!
    password:String!
}
input RegisterInput {
    username:String!,
    email:String!,
    role:String!,
    password:String!,
    name:String!
}
input ProfileInput {
    username:String,
    email:String,
    password:String,
}
input PostInput {
    category:String!,
    body:String
    id_user: ID
}
input CommentInput {
    text:String!
    id_posts:String!
}